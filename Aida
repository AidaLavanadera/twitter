import json

tweets_data = []
tweets_file = open('geotagged_tweets_20160812-0912.jsons', "r")
print(tweets_file)

counter = 0
for line in tweets_file:
    counter = counter + 1
    if counter > 10000:
        break
    try:
        tweet = json.loads(line)
        tweets_data.append(tweet)
    except:
        continue
# This creates a python list of strings with json data in the string.  there's a lot of fields, and I can either
# cherry pick the fields I want, or figure out how to read them all in and subset them once I have them in a nice dataframe

print(tweets_data[1:10])

import pandas as pd

from pandas.io.json import json_normalize
# Thank gawd for this package - all json fields straight into columns in a dataframe, no bullshit
tweets_df = json_normalize(tweets_data)

tweets_df.head()

# column_names=list(tweets_df.columns.values)
# print(column_names)

to_drop = ['created_at','contributors', 'coordinates', 'coordinates.coordinates', 'coordinates.type', 'entities.hashtags',
          'entities.media', 'entities.symbols', 'entities.symbols', 'entities.urls', 'entities.user_mentions',
          'extended_entities.media', 'favorite_count', 'favorited', 'filter_level', 'id', 'id_str', 'in_reply_to_status_id',
          'in_reply_to_status_id_str', 'in_reply_to_user_id', 'in_reply_to_user_id_str', 'is_quote_status',
          'place.bounding_box.coordinates', 'place.bounding_box.type', 'possibly_sensitive', 'quoted_status.contributors', 
          'quoted_status.coordinates', 'quoted_status.created_at', 'quoted_status.entities.hashtags', 'quoted_status.entities.media',
          'quoted_status.entities.symbols', 'quoted_status.entities.urls', 'quoted_status.entities.user_mentions',
           'quoted_status.extended_entities.media', 'quoted_status.favorite_count', 'quoted_status.favorited', 
           'quoted_status.filter_level', 'quoted_status.geo', 'quoted_status.id', 'quoted_status.id_str',
           'quoted_status.in_reply_to_screen_name', 'quoted_status.in_reply_to_status_id', 
           'quoted_status.in_reply_to_status_id_str', 'quoted_status.in_reply_to_user_id', 
           'quoted_status.in_reply_to_user_id_str', 'quoted_status.is_quote_status', 'quoted_status.lang', 'quoted_status.place',
           'quoted_status.place.bounding_box.coordinates', 'quoted_status.place.bounding_box.type', 'quoted_status.place.country', 
           'quoted_status.place.country_code', 'quoted_status.place.full_name', 'quoted_status.place.id', 
           'quoted_status.place.name', 'quoted_status.place.place_type', 'quoted_status.place.url', 
           'quoted_status.possibly_sensitive', 'quoted_status.quoted_status_id', 'quoted_status.quoted_status_id_str', 
           'quoted_status.retweet_count', 'quoted_status.retweeted', 'quoted_status.source', 'quoted_status.text', 
           'quoted_status.truncated', 'quoted_status.user.contributors_enabled', 'quoted_status.user.created_at', 
           'quoted_status.user.default_profile', 'quoted_status.user.default_profile_image', 'quoted_status.user.description', 
           'quoted_status.user.favourites_count', 'quoted_status.user.follow_request_sent', 'quoted_status.user.followers_count', 
           'quoted_status.user.following', 'quoted_status.user.friends_count', 'quoted_status.user.geo_enabled', 
           'quoted_status.user.id', 'quoted_status.user.id_str', 'quoted_status.user.is_translator', 'quoted_status.user.lang', 
           'quoted_status.user.listed_count', 'quoted_status.user.location', 'quoted_status.user.name', 
           'quoted_status.user.notifications', 'quoted_status.user.profile_background_color', 
           'quoted_status.user.profile_background_image_url', 'quoted_status.user.profile_background_image_url_https',
           'quoted_status.user.profile_background_tile', 'quoted_status.user.profile_banner_url',
           'quoted_status.user.profile_image_url', 'quoted_status.user.profile_image_url_https',
           'quoted_status.user.profile_link_color', 'quoted_status.user.profile_sidebar_border_color',
           'quoted_status.user.profile_sidebar_fill_color', 'quoted_status.user.profile_text_color',
           'quoted_status.user.profile_use_background_image', 'quoted_status.user.protected', 'quoted_status.user.screen_name', 
           'quoted_status.user.statuses_count', 'quoted_status.user.time_zone', 'quoted_status.user.url', 
           'quoted_status.user.utc_offset', 'quoted_status.user.verified', 'quoted_status_id', 'quoted_status_id_str', 
           'retweet_count', 'retweeted',  'truncated', 'user.contributors_enabled', 'user.created_at', 'user.default_profile', 
           'user.default_profile_image', 'user.description', 'user.favourites_count', 'user.follow_request_sent',
           'user.followers_count', 'user.following', 'user.friends_count', 'user.geo_enabled', 'user.id', 'user.id_str', 
           'user.is_translator','user.listed_count', 'user.location','user.notifications', 'user.profile_background_color',
           'user.profile_background_image_url', 'user.profile_background_image_url_https', 'user.profile_background_tile',
           'user.profile_banner_url', 'user.profile_image_url', 'user.profile_image_url_https', 'user.profile_link_color', 
           'user.profile_sidebar_border_color', 'user.profile_sidebar_fill_color', 'user.profile_text_color',
           'user.profile_use_background_image', 'user.protected', 'user.screen_name', 'user.statuses_count', 
           'user.time_zone', 'user.url', 'user.utc_offset', 'user.verified', 'source', 'timestamp_ms']
tweets_df.drop(to_drop, axis=1, inplace=True)
column_names_to_keep=list(tweets_df.columns.values)
print(column_names_to_keep)
tweets_df.head()

import matplotlib.pyplot as plt

# This is a directive that enables displaying charts in iPython notebooks.
%matplotlib inline


tweets_by_lang = tweets_df['lang'].value_counts()

fig, ax = plt.subplots()
ax.tick_params(axis='x', labelsize=15)
ax.tick_params(axis='y', labelsize=10)
ax.set_xlabel('Languages', fontsize=15)
ax.set_ylabel('Number of tweets' , fontsize=15)
ax.set_title('Top 5 languages', fontsize=15, fontweight='bold')
tweets_by_lang[:5].plot(ax=ax, kind='bar', color='green')


tweets_by_lang = tweets_df['place.country'].value_counts()

fig, ax = plt.subplots()
ax.tick_params(axis='x', labelsize=15)
ax.tick_params(axis='y', labelsize=10)
ax.set_xlabel('Country', fontsize=15)
ax.set_ylabel('Number of tweets' , fontsize=15)
ax.set_title('Top 10 Countries', fontsize=15, fontweight='bold')
tweets_by_lang[:10].plot(ax=ax, kind='bar', color='green')
